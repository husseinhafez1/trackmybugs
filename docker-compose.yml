version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: trackmybugs-db
    environment:
      POSTGRES_DB: trackmybugs
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trackmybugs-network

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trackmybugs-backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: trackmybugs
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - trackmybugs-network
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: trackmybugs-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - trackmybugs-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  trackmybugs-network:
    driver: bridge 